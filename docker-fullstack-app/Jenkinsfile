pipeline{
    agent any

    environment {
        dockerHubRegistry = 'ypwa121'
        dockerHubRegistryCredential = 'docker-hub'
        //githubCredential = 'k8s_manifest_git'
        githubCredential = 'github_cred'
        gitEmail = 'ypwa121@gmail.com'
        gitName = 'Jongwook-Seong'
        imageFrontend = 'react-frontend'
        imageBackend = 'nodejs-backend'
        imageMysql= 'mysql-db'
    }

    stages {
        stage('check out application git branch'){
            steps {
                checkout scm
            }
            post {
                failure {
                    echo 'repository checkout failure'
                }
                success {
                    echo 'repository checkout success'
                }
            }
        }

        stage('docker image build'){
            steps{
                sh "docker build -t ${dockerHubRegistry}/react-frontend:${currentBuild.number} ./docker-fullstack-app/frontend"
                sh "docker build -t ${dockerHubRegistry}/react-frontend:latest ./docker-fullstack-app/frontend"

                sh "docker build -t ${dockerHubRegistry}/nodejs-backend:${currentBuild.number} ./docker-fullstack-app/backend"
                sh "docker build -t ${dockerHubRegistry}/nodejs-backend:latest ./docker-fullstack-app/backend"

                sh "docker build -t ${dockerHubRegistry}/mysql-db:${currentBuild.number} ./docker-fullstack-app/mysql"
                sh "docker build -t ${dockerHubRegistry}/mysql-db:latest ./docker-fullstack-app/mysql"
            }
            post {
                    failure {
                      echo 'Docker image build failure !'
                    }
                    success {
                      echo 'Docker image build success !'
                    }
            }
        }
        stage('Docker Image Push') {
            steps {
                withDockerRegistry([ credentialsId: dockerHubRegistryCredential, url: "" ]) {
                    sh "docker push ${dockerHubRegistry}/react-frontend:${currentBuild.number}"
                    sh "docker push ${dockerHubRegistry}/react-frontend:latest"

                    sh "docker push ${dockerHubRegistry}/nodejs-backend:${currentBuild.number}"
                    sh "docker push ${dockerHubRegistry}/nodejs-backend:latest"

                    sh "docker push ${dockerHubRegistry}/mysql-db:${currentBuild.number}"
                    sh "docker push ${dockerHubRegistry}/mysql-db:latest"

                    sleep 10 /* Wait uploading */
                }
            }
            post {
                    failure {
                      echo 'Docker Image Push failure !'
                      sh "docker rmi ${dockerHubRegistry}/react-frontend:${currentBuild.number}"
                      sh "docker rmi ${dockerHubRegistry}/react-frontend:latest"

                      sh "docker rmi ${dockerHubRegistry}/nodejs-backend:${currentBuild.number}"
                      sh "docker rmi ${dockerHubRegistry}/nodejs-backend:latest"

                      sh "docker rmi ${dockerHubRegistry}/mysql-db:${currentBuild.number}"
                      sh "docker rmi ${dockerHubRegistry}/mysql-db:latest"
                    }
                    success {
                      echo 'Docker image push success !'
                      sh "docker rmi ${dockerHubRegistry}/react-frontend:${currentBuild.number}"
                      sh "docker rmi ${dockerHubRegistry}/react-frontend:latest"

                      sh "docker rmi ${dockerHubRegistry}/nodejs-backend:${currentBuild.number}"
                      sh "docker rmi ${dockerHubRegistry}/nodejs-backend:latest"

                      sh "docker rmi ${dockerHubRegistry}/mysql-db:${currentBuild.number}"
                      sh "docker rmi ${dockerHubRegistry}/mysql-db:latest"
                    }
            }
        }
        stage('K8S Manifest Update') {
            steps {
                sh "ls"
                sh 'mkdir -p gitOpsRepo'
                dir("gitOpsRepo")
                {
                    git branch: "main",
                    credentialsId: githubCredential,
                    url: 'https://github.com/Jongwook-Seong/docker-fullstack-app-manifest.git'

                    sh "sed -i 's/react-frontend:.*\$/react-frontend:${currentBuild.number}/g' react-fe-deployment.yaml"
                    sh "sed -i 's/nodejs-backend:.*\$/nodejs-backend:${currentBuild.number}/g' nodejs-be-deployment.yaml"
                    sh "sed -i 's/mysql-db:.*\$/mysql-db:${currentBuild.number}/g' mysql-db-deployment.yaml"

                    sh "git add ."
                    sh "git commit -m '[UPDATE] k8s ${currentBuild.number} image versioning'"
//                     sshagent(credentials: ['19bdc43b-f3be-4cb9-aa1d-9896f503e3e8']) {
//                         sh "git remote set-url origin git@github.com:skarltjr/kube-manifests.git"
//                         sh "git push -u origin main"
//                     }
                    withCredentials([gitUsernamePassword(credentialsId: githubCredential,
                                     gitToolName: 'git-tool')]) {
                        sh "git remote set-url origin https://github.com/Jongwook-Seong/docker-fullstack-app-manifest"
                        sh "git push -u origin main"
                    }
                }
            }
            post {
                    failure {
                      echo 'K8S Manifest Update failure !'
                    }
                    success {
                      echo 'K8S Manifest Update success !'
                    }
            }
        }

    }
}
